{"version":3,"sources":["webpack://gatsby-starter-leonids/./src/templates/blog-list.tsx"],"names":["data","location","pageContext","siteTitle","site","siteMetadata","title","posts","allMarkdownRemark","edges","currentPage","isFirst","isLast","numPages","prevPage","nextPage","map","node","frontmatter","fields","slug","key","style","marginBottom","rhythm","Link","boxShadow","to","date","dangerouslySetInnerHTML","__html","description","excerpt","display","flexWrap","justifyContent","listStyle","padding","rel"],"mappings":"iMA4GA,UA1EkB,SAAC,GAIkB,IAHnCA,EAGkC,EAHlCA,KACAC,EAEkC,EAFlCA,SACAC,EACkC,EADlCA,YAEMC,EAAYH,EAAKI,KAAKC,aAAaC,MACnCC,EAAQP,EAAKQ,kBAAkBC,MAC7BC,EAA0BR,EAA1BQ,YAEFC,EAA0B,IAAhBD,EACVE,EAASF,IAHmBR,EAAbW,SAIfC,EAAWJ,EAAc,GAAM,EAAI,IAAxB,KAAkCA,EAAc,GAC3DK,EAAQ,KAAOL,EAAc,GAEnC,OACE,gBAAC,IAAD,CAAQT,SAAUA,EAAUK,MAAOH,GACjC,gBAAC,IAAD,CAAKG,MAAM,cACVC,EAAMS,KAAI,YAAe,IAAZC,EAAW,EAAXA,KACNX,EAAQW,EAAKC,YAAYZ,OAASW,EAAKE,OAAOC,KACpD,OACE,2BAASC,IAAKJ,EAAKE,OAAOC,MACxB,8BACE,sBACEE,MAAO,CACLC,cAAcC,QAAO,EAAI,KAG3B,gBAAC,EAAAC,KAAD,CAAMH,MAAO,CAAEI,UAAU,QAAWC,GAAIV,EAAKE,OAAOC,MACjDd,IAGL,6BAAQW,EAAKC,YAAYU,OAE3B,+BACE,qBACEC,wBAAyB,CACvBC,OAAQb,EAAKC,YAAYa,aAAed,EAAKe,gBAQzD,2BACE,sBACEV,MAAO,CACLW,QAAQ,OACRC,SAAS,OACTC,eAAe,gBACfC,UAAU,OACVC,QAAS,IAGX,2BACI1B,GACA,gBAAC,EAAAc,KAAD,CAAME,GAAIb,EAAUwB,IAAI,QAAxB,oBAKJ,2BACI1B,GACA,gBAAC,EAAAa,KAAD,CAAME,GAAIZ,EAAUuB,IAAI,QAAxB","file":"component---src-templates-blog-list-tsx-d31846f7a986f0d51f65.js","sourcesContent":["// Gatsby supports TypeScript natively!\r\nimport React from \"react\"\r\nimport { PageProps, Link, graphql } from \"gatsby\"\r\nimport Layout from \"../components/layout\"\r\nimport SEO from \"../components/seo\"\r\nimport { rhythm } from \"../utils/typography\"\r\n\r\ntype PageContext = {\r\n  currentPage: number\r\n  numPages: number\r\n}\r\ntype Data = {\r\n  site: {\r\n    siteMetadata: {\r\n      title: string\r\n    }\r\n  }\r\n  allMarkdownRemark: {\r\n    edges: {\r\n      node: {\r\n        excerpt: string\r\n        frontmatter: {\r\n          title: string\r\n          date: string\r\n          description: string\r\n        }\r\n        fields: {\r\n          slug: string\r\n        }\r\n      }\r\n    }[]\r\n  }\r\n}\r\n\r\nconst BlogIndex = ({\r\n  data,\r\n  location,\r\n  pageContext,\r\n}: PageProps<Data, PageContext>) => {\r\n  const siteTitle = data.site.siteMetadata.title\r\n  const posts = data.allMarkdownRemark.edges\r\n  const { currentPage, numPages } = pageContext\r\n\r\n  const isFirst = currentPage === 1\r\n  const isLast = currentPage === numPages\r\n  const prevPage = currentPage - 1 === 1 ? \"/\" : `/${currentPage - 1}`\r\n  const nextPage = `/${currentPage + 1}`\r\n\r\n  return (\r\n    <Layout location={location} title={siteTitle}>\r\n      <SEO title=\"All posts\" />\r\n      {posts.map(({ node }) => {\r\n        const title = node.frontmatter.title || node.fields.slug\r\n        return (\r\n          <article key={node.fields.slug}>\r\n            <header>\r\n              <h3\r\n                style={{\r\n                  marginBottom: rhythm(1 / 4),\r\n                }}\r\n              >\r\n                <Link style={{ boxShadow: `none` }} to={node.fields.slug}>\r\n                  {title}\r\n                </Link>\r\n              </h3>\r\n              <small>{node.frontmatter.date}</small>\r\n            </header>\r\n            <section>\r\n              <p\r\n                dangerouslySetInnerHTML={{\r\n                  __html: node.frontmatter.description || node.excerpt,\r\n                }}\r\n              />\r\n            </section>\r\n          </article>\r\n        )\r\n      })}\r\n\r\n      <nav>\r\n        <ul\r\n          style={{\r\n            display: `flex`,\r\n            flexWrap: `wrap`,\r\n            justifyContent: `space-between`,\r\n            listStyle: `none`,\r\n            padding: 0,\r\n          }}\r\n        >\r\n          <li>\r\n            {!isFirst && (\r\n              <Link to={prevPage} rel=\"prev\">\r\n                ← Previous Page\r\n              </Link>\r\n            )}\r\n          </li>\r\n          <li>\r\n            {!isLast && (\r\n              <Link to={nextPage} rel=\"next\">\r\n                Next Page →\r\n              </Link>\r\n            )}\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default BlogIndex\r\n\r\nexport const pageQuery = graphql`\r\n  query blogPageQuery($skip: Int!, $limit: Int!) {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n      }\r\n    }\r\n    allMarkdownRemark(\r\n      sort: { fields: [frontmatter___date], order: DESC }\r\n      limit: $limit\r\n      skip: $skip\r\n    ) {\r\n      edges {\r\n        node {\r\n          excerpt\r\n          fields {\r\n            slug\r\n          }\r\n          frontmatter {\r\n            date(formatString: \"MMMM DD, YYYY\")\r\n            title\r\n            description\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n"],"sourceRoot":""}